from abc import ABC, abstractmethod
class Animal(ABC):
    
    @abstractmethod
    def sound(self):
        pass
    def sleep(self):
        print("This animal is sleeping.")

class Dog(Animal):
    
    def __init__(self, name):
        self.name = name
    
    def sound(self):
        return f"{self.name} says Woof!"

    
    def create_instance_and_call_abstract(self):
        dog_instance = Dog(self.name)  
        print(dog_instance.sound())    
    
    def create_instance_and_call_non_abstract(self):
        dog_instance = Dog(self.name) 
        dog_instance.sleep()            


dog = Dog("Buddy")
dog.create_instance_and_call_abstract()  
dog.create_instance_and_call_non_abstract()
